{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","className","preventDefault","type","pattern","title","onChange","required","Filter","filter","Contacts","contacts","onDelete","console","log","map","id","onClick","App","key","defaultContacts","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","newContact","uuidv4","some","contact","includes","alert","toLocaleLowerCase","target","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"iQAEe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAUAC,EAAQ,WACZP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMM,UAAU,OAAOX,SAZJ,SAAAO,GACnBA,EAAEK,iBACFZ,EAAS,CAAEE,OAAME,WACjBM,KASA,UACE,kCACE,mBAAGC,UAAU,cAAb,mBACA,uBACEA,UAAU,cACVE,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,kcACNN,MAAOP,EACPc,SAAUV,EACVW,UAAQ,OAGZ,wBAAON,UAAU,cAAjB,UACE,mBAAGA,UAAU,cAAb,qBACA,uBACEA,UAAU,cACVE,KAAK,MACLX,KAAK,SACLY,QAAQ,yFACRC,MAAM,obACNN,MAAOL,EACPY,SAAUV,EACVW,UAAQ,OAIZ,wBAAQJ,KAAK,SAASF,UAAU,SAAhC,4BC7DS,SAASO,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,OAAQH,EAAY,EAAZA,SACvC,OACE,sBAAKL,UAAU,mBAAf,UACE,mBAAGA,UAAU,aAAb,mCACA,uBACEA,UAAU,cACVE,KAAK,OACLX,KAAK,SACLO,MAAOU,EACPH,SAAUA,OCTH,SAASI,EAAT,GAA2C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAE3C,OADAC,QAAQC,IAAIH,GAEV,oBAAIV,UAAU,eAAd,SACGU,EAASI,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIxB,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzB,OACE,qBAAIO,UAAU,qBAAd,UACE,4BAAIT,IACJ,4BAAIE,IACJ,wBAAQO,UAAU,SAASgB,QAASL,EAAUI,GAAIA,EAAlD,8BAHsCA,Q,kBCanC,SAASE,IACtB,MAbsB,SAACC,EAAKC,GAC5B,MAA0B7B,oBAAS,WAAO,IAAD,EACvC,iBAAO8B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,WAA9C,QAAuD,MADzD,mBAAOO,EAAP,KAAcC,EAAd,KAQA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQV,EAAKE,KAAKS,UAAUJ,MAC/C,CAACP,EAAKO,IAEF,CAACA,EAAOC,GAIiBI,CAAgB,YAAhD,mBAAOpB,EAAP,KAAiBqB,EAAjB,KACA,EAA4BzC,mBAAS,IAArC,mBAAOkB,EAAP,KAAewB,EAAf,KA6BA,OACE,sBAAKhC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAACZ,EAAD,CAAMC,SAjBS,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACpBwC,EAAa,CACjBlB,GAAImB,cACJ3C,OACAE,UAGEiB,EAASyB,MAAK,SAAAC,GAAO,OAAIA,EAAQ7C,KAAK8C,SAAS9C,MACjD+C,MAAM,GAAD,OAAI/C,EAAJ,6BAELwC,EAAY,CAACE,GAAF,mBAAiBvB,QAQ5B,oBAAIV,UAAU,QAAd,sBACA,cAACO,EAAD,CAAQF,SAvBS,SAAAT,GACnBoC,EAAUpC,EAAEC,cAAcC,QAsBQA,MAAOU,IACvC,cAACC,EAAD,CAAUC,SA5BLA,EAASF,QAAO,qBAAGjB,KACnBgD,oBAAoBF,SAAS7B,EAAO+B,wBA2BH5B,SAjCpB,SAAAf,GACpBmC,EAAYrB,EAASF,QAAO,qBAAGO,KAAgBnB,EAAE4C,OAAOzB,aCnB5D0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAD,MAEF2B,SAASC,cAAc,Y","file":"static/js/main.fe84e518.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <label>\r\n        <p className=\"form__lable\">Name </p>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className=\"form__lable\">\r\n        <p className=\"form__lable\"> Number</p>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className=\"button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ filter, onChange }) {\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <p className=\"title-text\">Find contacts by name</p>\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Contacts({ contacts, onDelete }) {\r\n  console.log(contacts);\r\n  return (\r\n    <ul className=\"contact-list\">\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li className=\"contact-list__item\" key={id}>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <button className=\"button\" onClick={onDelete} id={id}>\r\n              Delete contact\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\n\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\nimport './components/Form/Form.css';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useLocalStorage = (key, defaultContacts) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? [];\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const deleteContact = e => {\n    setContacts(contacts.filter(({ id }) => id !== e.target.id));\n  };\n\n  const filterContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name.includes(name))) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      setContacts([newContact, ...contacts]);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Phonebook</h1>\n      <Form onSubmit={addContact} />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter onChange={changeFilter} value={filter} />\n      <Contacts contacts={filterContacts()} onDelete={deleteContact} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}